namespace com.ibm.streamsx.adaptiveparser.leef;

use com.ibm.streamsx.adaptiveparser::*;

/**
 * LEEFParser composite uses pre-configured AdaptiveParser operator, parameterized for LEEF format parsing.
 * 
 * @input RawData blob or rstring data to be parsed
 * @output LEEFEvent LEEFMetaData_t, tuple<$customAttributesType eventAttributes> (refer to parameter $customAttributesType)
 * @param dataAttr an input attribute name which holds data to parse
 * @param batch expect multiple events when parsing the data
 * @param customAttributesType LEEFAttributes_t by default - can be extended
 */
public composite LEEFParser(input RawData; output LEEFEvent) {
param
	attribute $dataAttr;
	expression<boolean> $batch : false;
	type $customAttributesType : LEEFAttributes_t;

type
	static SyslogHeader_t	= 	timestamp date, rstring ipAddress;

	static LEEFHeader_t		= 	float32 version,
								rstring productVendor,
								rstring productName,
								rstring productVersion, 
								rstring eventID;

	static LEEFAttributes_t	=	rstring cat, rstring devTime, rstring devTimeFormat, uint16 proto, uint8 sev,
								rstring src, rstring dst, uint16 srcPort, uint16 dstPort,
								rstring srcPreNAT, rstring dstPreNAT, uint16 srcPreNATPort, uint16 dstPreNATPort,
								rstring srcPostNAT, rstring dstPostNAT, uint16 srcPoatNATPort, uint16 dstPoatNATPort,
								rstring usrName, rstring srcMAC, rstring dstMAC, rstring identMAC,
								rstring identSrc, rstring identHostName, rstring identNetBios, rstring identGrpName,
								uint32 srcBytes, uint32 dstBytes, uint32 srcPackets, uint32 dstPackets, uint32 totalBytes, 
								rstring vSrc, rstring vSrcName, rstring accountName, rstring role, rstring realm,
								rstring policy, rstring resource, rstring url, rstring groupid, rstring domain,
								boolean isLoginEvent, boolean isLogoutEvent, rstring identSecondlp,
								rstring calLanguage, rstring calCountryOrRegion;
								
	static LEEFMetaData_t	=	SyslogHeader_t syslog, LEEFHeader_t eventHeader;
	
graph
    
    stream<LEEFMetaData_t, tuple<$customAttributesType eventAttributes>> LEEFEvent = AdaptiveParser(RawData) {
    	param
    		batch : $batch;
    		dataAttr : $dataAttr;
    		globalSkipper : tab;
    		tsFormat : "%b %d %Y %H:%M:%S";
		output
			LEEFEvent :
				syslog = Param({ globalSkipper = Skipper.whitespace}),
				eventHeader = Param({ globalDelimiter = "|", tuplePrefix = "LEEF:"}),
				eventAttributes = Param({ globalAttrNameAsPrefix = true, globalAttrNameDelimiter = "="});
    }
}
