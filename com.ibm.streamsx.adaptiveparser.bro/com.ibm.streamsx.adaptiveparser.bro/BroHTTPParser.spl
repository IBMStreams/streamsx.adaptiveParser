namespace com.ibm.streamsx.adaptiveparser.bro ;

use com.ibm.streamsx.adaptiveparser::* ;

/**
 * BroHTTPParser composite uses pre-configured AdaptiveParser operator, parameterized for Bro HTTP format parsing.
 * 
 * @input RawData blob or rstring data to be parsed
 * @output BroEvent BroHTTP_t
 * @param dataAttr an input attribute name which holds data to parse
 * @param batch expect multiple events when parsing the data
 */
public composite BroHTTPParser(input RawData ; output BroEvent) {
	param
		attribute $dataAttr ;
		expression<boolean> $batch : false ;

	graph
		stream<BroHTTP_t> BroEvent = AdaptiveParser(RawData) {
			param
				comment : "#" ;
				globalSkipper : tab ;
				tsToken : ".";
				undefined : "-", "(empty)";

			output BroEvent:
				tags = Param({ globalDelimiter = ",", globalSkipper = Skipper.none, cutSkipper = Skipper.tab }),
				proxied = Param({ globalDelimiter = ",", globalSkipper = Skipper.none, cutSkipper = Skipper.tab }),
				orig_fuids = Param({ globalDelimiter = ",", globalSkipper = Skipper.none, cutSkipper = Skipper.tab }),
				orig_mime_types = Param({ globalDelimiter = ",", globalSkipper = Skipper.none, cutSkipper = Skipper.tab }),
				resp_fuids = Param({ globalDelimiter = ",", globalSkipper = Skipper.none, cutSkipper = Skipper.tab }),
				resp_mime_types = Param({ globalDelimiter = ",", globalSkipper = Skipper.none, cutSkipper = Skipper.tab });
		}
}
