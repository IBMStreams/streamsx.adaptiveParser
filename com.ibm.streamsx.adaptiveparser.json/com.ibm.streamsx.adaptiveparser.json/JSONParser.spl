namespace com.ibm.streamsx.adaptiveparser.json ;

use com.ibm.streamsx.adaptiveparser::* ;

/**
 * JSONParser composite uses pre-configured AdaptiveParser operator, parameterized for JSON format parsing.
 * 
 * @input RawData blob or rstring data to be parsed
 * @output JSONEvent should match JSONType parameter
 * @param dataAttr an input attribute name which holds data to parse
 * @param batch expect multiple events when parsing the data
 * @param explain run in explain mode - prints to console data beeing parsed  
 * @param keyQuoted expect JSON keys to be double quoted (default)
 * @param tsFormat format for timestamp conversion
 * @param tsToken timestamp token for epoch format
 * @param JSONType tuple schema to parse JSON
 */
public composite JSONParser(input RawData ; output JSONEvent) {
param
	attribute $dataAttr;
	expression<boolean> $batch : false;
	expression<boolean> $explain : false;
    expression<boolean> $keyQuoted : true;
    expression<rstring> $tsFormat : "";
    expression<rstring> $tsToken: "";
	type $JSONType;

graph
    
    stream<$JSONType> JSONEvent = AdaptiveParser(RawData) {
    	param
    		batch : $batch;
    		dataAttr : $dataAttr;
    		explain : $explain;
    		globalDelimiter : ",";
    		globalTupleScheme : openAttrNamePaired;
    		globalAttrNameDelimiter : ":";
    		globalAttrNameQuoted : $keyQuoted;
    		quotedOptStrings : true;
    		listPrefix : "[";
    		listSuffix : "]";
    		mapPrefix : "{";
    		mapSuffix : "}";
    		tuplePrefix : "{";
    		tupleSuffix : "}";
    		tsFormat : $tsFormat;
    		tsToken : $tsToken;
    }
}
